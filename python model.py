# -*- coding: utf-8 -*-
"""First ML Model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/197fmJm5AXVHZTbL5Bj6R2b16c6IvGmvR
"""

# Library import

import pandas as pd
pf = pd.read_csv('data.csv')
pf
pf.head()

"""## Data Split"""

y = pf['logS']
 y

x = pf.drop('logS', axis = 1)
x.head()

"""# Dividing the data into training set


"""

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 100)

x_train

x_test

y_test

"""#Model Building

Linear Regression
"""

from sklearn.linear_model import LinearRegression

lr = LinearRegression()
lr.fit(x_train, y_train)

"""

Applying the model to make a prediction
```

"""

y_lr_train_pred = lr.predict(x_train)
y_lr_test_pred = lr.predict(x_test)

y_lr_test_pred

y_lr_train_pred

"""#Model Performance"""

from sklearn.metrics import mean_squared_error, r2_score

lr_train_mse = mean_squared_error(y_train, y_lr_train_pred)
lr_train_r2 = r2_score(y_train,y_lr_train_pred)

lr_test_mse = mean_squared_error(y_test, y_lr_test_pred)
lr_test_r2 = r2_score(y_test, y_lr_test_pred)

print('LR MSE (Train):', lr_train_mse)
print('LR R2 (Train):', lr_train_r2)
print('LR MSE (Test):', lr_test_mse)
print('LR r2 (Test):', lr_test_r2)



lr_results = pd.DataFrame(['Linear regression', lr_train_mse, lr_train_r2, lr_test_mse, lr_test_r2]).transpose()
lr_results.columns = ['Method', 'Training_MSE', 'Training R2', 'Test MSE','Test R2']
lr_results

"""# Random Forest"""

from sklearn.ensemble import RandomForestRegressor

tp = RandomForestRegressor(max_depth=2, random_state = 100)
tp.fit(x_train, y_train)

y_tp_train_pred = tp.predict(x_train)
y_tp_test_pred = tp.predict(x_test)

from sklearn.metrics import mean_squared_error, r2_score

tp_train_mse = mean_squared_error(y_train, y_tp_train_pred)
tp_train_r2 = r2_score(y_train,y_tp_train_pred)

tp_test_mse = mean_squared_error(y_test, y_tp_test_pred)
tp_test_r2 = r2_score(y_test, y_tp_test_pred)

print('tp MSE (Train):', tp_train_mse)
print('tp R2 (Train):', tp_train_r2)
print('tp MSE (Test):', tp_test_mse)
print('tp r2 (Test):', tp_test_r2)

tp_results = pd.DataFrame(['Random Forest', tp_train_mse, tp_train_r2, tp_test_mse, tp_test_r2]).transpose()
tp_results.columns = ['Method', 'Training_MSE', 'Training R2', 'Test MSE','Test R2']
tp_results

"""#Model Comparison"""

comp = pd.concat([lr_results, tp_results], axis = 0)
comp

"""# Data Visualization"""

from matplotlib import pyplot as pt
pt.figure(figsize=(6,6))
pt.scatter(x=y_train, y=y_lr_train_pred, alpha=0.6)

pt.plot()
pt.xlabel('Predict Logs')
pt.ylabel('Experimental Logs')